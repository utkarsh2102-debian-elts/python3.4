Index: python3.4-3.4.2/Lib/test/test_urlparse.py
===================================================================
--- python3.4-3.4.2.orig/Lib/test/test_urlparse.py	2020-09-29 15:10:17.556740604 +0200
+++ python3.4-3.4.2/Lib/test/test_urlparse.py	2020-09-29 15:10:17.552740408 +0200
@@ -889,11 +889,12 @@
         self.assertIn('\uFF03', denorm_chars)
 
         for scheme in ["http", "https", "ftp"]:
-            for c in denorm_chars:
-                url = "{}://netloc{}false.netloc/path".format(scheme, c)
-                with self.subTest(url=url, char='{:04X}'.format(ord(c))):
-                    with self.assertRaises(ValueError):
-                        urllib.parse.urlsplit(url)
+            for netloc in ["netloc{}false.netloc", "n{}user@netloc"]:
+                for c in denorm_chars:
+                    url = "{}://{}/path".format(scheme, netloc.format(c))
+                    with self.subTest(url=url, char='{:04X}'.format(ord(c))):
+                        with self.assertRaises(ValueError):
+                            urllib.parse.urlsplit(url)
 
 def test_main():
     support.run_unittest(UrlParseTestCase)
Index: python3.4-3.4.2/Lib/urllib/parse.py
===================================================================
--- python3.4-3.4.2.orig/Lib/urllib/parse.py	2020-09-29 15:10:17.556740604 +0200
+++ python3.4-3.4.2/Lib/urllib/parse.py	2020-09-29 15:32:00.936654476 +0200
@@ -322,6 +322,13 @@
     # looking for characters like \u2100 that expand to 'a/c'
     # IDNA uses NFKC equivalence, so normalize for this check
     import unicodedata
+-    n = netloc.rpartition('@')[2] # ignore anything to the left of '@'
+-    n = n.replace(':', '')        # ignore characters already included
+-    n = n.replace('#', '')        # but not the surrounding text
++    n = netloc.replace('@', '')   # ignore characters already included
++    n = n.replace(':', '')        # but not the surrounding text
++    n = n.replace('#', '')
+
     netloc2 = unicodedata.normalize('NFKC', netloc)
     if netloc == netloc2:
         return
